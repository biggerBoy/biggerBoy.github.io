<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[搭建hexo静态博客框架全过程及踩的坑]]></title>
    <url>%2F2019%2F05%2F24%2F%E6%90%AD%E5%BB%BAhexo%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2%E6%A1%86%E6%9E%B6%E5%85%A8%E8%BF%87%E7%A8%8B%E5%8F%8A%E8%B8%A9%E7%9A%84%E5%9D%91%2F</url>
    <content type="text"><![CDATA[网上有很多博客写了hexo的操作教程，但是都很生硬，我找了好几篇按照博客上写的一步一步操作，总是会遇到这样活那样的错误，导致最终卡主做不下去。而且很多博客只是一味的堆积教程、步骤，只字不提过程中会报什么错，咋解决，导致我很苦恼。 所以这篇文章将记录我按照别人的博客搭建hexo博客静态框架所遇到的问题以及解决方法。 首先需要安装git和node.js，这是必须的，因为hexo是基于node的，而我们需要用git将网站托管到GitHub。安装这里不再多说。 安装完成后，在你电脑的D盘或别的盘，新建个目录如blog，在你建的目录下右键打开git bash，执行 npm install -g hexo-cli，安装hexo客户端，执行命令后效果如下 1234567$ npm install -g hexo-cliC:\Users\yapeng\AppData\Roaming\npm\hexo -&gt; C:\Users\yapeng\AppData\Roaming\npm\node_modules\hexo-cli\bin\hexonpm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@1.2.9 (node_modules\hexo-cli\node_modules\fsevents):npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@1.2.9: wanted &#123;&quot;os&quot;:&quot;darwin&quot;,&quot;arch&quot;:&quot;any&quot;&#125; (current: &#123;&quot;os&quot;:&quot;win32&quot;,&quot;arch&quot;:&quot;x64&quot;&#125;)+ hexo-cli@1.1.0updated 1 package in 34.207s 然后执行 hexo init myblg，myblg是自定义的，会生成个目录 12345678910111213141516171819$ hexo init myblgINFO Cloning hexo-starter to D:\blog\myblgCloning into &apos;D:\blog\myblg&apos;...remote: Enumerating objects: 3, done.remote: Counting objects: 100% (3/3), done.remote: Compressing objects: 100% (3/3), done.remote: Total 71 (delta 0), reused 0 (delta 0), pack-reused 68Unpacking objects: 100% (71/71), done.Submodule &apos;themes/landscape&apos; (https://github.com/hexojs/hexo-theme-landscape.git) registered for path &apos;themes/landscape&apos;Cloning into &apos;D:/blog/myblg/themes/landscape&apos;...remote: Enumerating objects: 1, done.remote: Counting objects: 100% (1/1), done.remote: Total 896 (delta 0), reused 0 (delta 0), pack-reused 895Receiving objects: 100% (896/896), 2.55 MiB | 192.00 KiB/s, done.Resolving deltas: 100% (479/479), done.Submodule path &apos;themes/landscape&apos;: checked out &apos;73a23c51f8487cfcd7c6deec96ccc7543960d350&apos;INFO Install dependenciesnpm WARN deprecated core-js@1.2.7: core-js@&lt;2.6.8 is no longer maintained. Please, upgrade to core-js@3 or at least to actual version of core-js@2.INFO Catch you later 然后$ cd myblg/ 再然后执行$ npm install 12345$ npm installnpm notice created a lockfile as package-lock.json. You should commit this file.audited 4698 packages in 4.572sfound 3 vulnerabilities (2 low, 1 moderate) run `npm audit fix` to fix them, or `npm audit` for details 发现有提示，然后根据提示继续执行$ npm audit fix 123456$ npm audit fixup to date in 3.725sfixed 0 of 3 vulnerabilities in 4698 scanned packages 2 vulnerabilities required manual review and could not be updated 1 package update for 1 vuln involved breaking changes (use `npm audit fix --force` to install breaking changes; or refer to `npm audit` for steps to fix these manually) 继续根据提示$ npm audit fix --force 12345678$ npm audit fix --forcenpm WARN using --force I sure hope you know what you are doing.+ hexo-renderer-marked@1.0.1updated 2 packages in 5.736sfixed 1 of 3 vulnerabilities in 4698 scanned packages 2 vulnerabilities required manual review and could not be updated 1 package update for 1 vuln involved breaking changes (installed due to `--force` option) 然后执行hexo generate或$ hexo g，生成静态博客 1234567891011121314151617181920212223242526272829303132$ hexo gINFO Start processingINFO Files loaded in 440 msINFO Generated: index.htmlINFO Generated: archives/index.htmlINFO Generated: fancybox/blank.gifINFO Generated: fancybox/fancybox_loading.gifINFO Generated: fancybox/fancybox_overlay.pngINFO Generated: fancybox/fancybox_sprite.pngINFO Generated: fancybox/jquery.fancybox.cssINFO Generated: fancybox/fancybox_loading@2x.gifINFO Generated: fancybox/fancybox_sprite@2x.pngINFO Generated: archives/2019/index.htmlINFO Generated: archives/2019/05/index.htmlINFO Generated: fancybox/helpers/jquery.fancybox-buttons.cssINFO Generated: css/fonts/fontawesome-webfont.eotINFO Generated: css/style.cssINFO Generated: js/script.jsINFO Generated: fancybox/jquery.fancybox.pack.jsINFO Generated: fancybox/helpers/jquery.fancybox-media.jsINFO Generated: fancybox/helpers/jquery.fancybox-thumbs.jsINFO Generated: fancybox/helpers/jquery.fancybox-buttons.jsINFO Generated: fancybox/helpers/jquery.fancybox-thumbs.cssINFO Generated: fancybox/helpers/fancybox_buttons.pngINFO Generated: css/fonts/fontawesome-webfont.woffINFO Generated: css/fonts/FontAwesome.otfINFO Generated: css/fonts/fontawesome-webfont.ttfINFO Generated: css/fonts/fontawesome-webfont.svgINFO Generated: 2019/05/23/hello-world/index.htmlINFO Generated: css/images/banner.jpgINFO Generated: fancybox/jquery.fancybox.jsINFO 28 files generated in 928 ms 然后执行$ hexo s，启动服务 123$ hexo serverINFO Start processingINFO Hexo is running at http://localhost:4000 . Press Ctrl+C to stop. 说明正常启动 访问localhost:4000正常，可以看到hexo的默认页面 我们要用github托管我们的网站，所以要在github注册账号，注册完后创建一个仓库，名字叫XXXX.github.io，其中XXXX就是你的GitHub的用户名，一定要这样。 然后安装deployer-git，用来将hexo生成的文件推到GitHub 执行npm install hexo-deployer-git --save 1234567$ npm install hexo-deployer-git --savenpm WARN babel-eslint@10.0.1 requires a peer of eslint@&gt;= 4.12.1 but none is installed. You must install peer dependencies yourself.+ hexo-deployer-git@1.0.0added 59 packages from 48 contributors and audited 6951 packages in 16.659sfound 2 low severity vulnerabilities run `npm audit fix` to fix them, or `npm audit` for details 意思是 babel-eslint@10.0.1需要 eslint@&gt;= 4.12.1 ，但是没安装，需要手动安装，不用管。 关键的一步，修改配置_config.yml文件，替换成你自己的github仓库地址，** 冒号后面一定要有空格！！！** 记得后面有.git (这是我已经部署到GitHub后的，可能和你现在的不太一样) 1234deploy: type: git repo: https://github.com/biggerboy/biggerboy.github.io.git branch: master 先不管，继续执行hexo clean 123$ hexo cleanINFO Deleted database.INFO Deleted public folder. 继续hexo generate或hexo g生成静态博客系统 1234567891011121314151617181920212223242526272829303132$ hexo generateINFO Start processingINFO Files loaded in 491 msINFO Generated: index.htmlINFO Generated: archives/index.htmlINFO Generated: fancybox/blank.gifINFO Generated: fancybox/fancybox_loading.gifINFO Generated: fancybox/jquery.fancybox.cssINFO Generated: fancybox/fancybox_loading@2x.gifINFO Generated: fancybox/fancybox_overlay.pngINFO Generated: fancybox/fancybox_sprite.pngINFO Generated: archives/2019/05/index.htmlINFO Generated: fancybox/fancybox_sprite@2x.pngINFO Generated: archives/2019/index.htmlINFO Generated: css/fonts/fontawesome-webfont.eotINFO Generated: fancybox/helpers/jquery.fancybox-buttons.cssINFO Generated: js/script.jsINFO Generated: fancybox/jquery.fancybox.pack.jsINFO Generated: fancybox/helpers/jquery.fancybox-thumbs.cssINFO Generated: fancybox/helpers/jquery.fancybox-buttons.jsINFO Generated: css/style.cssINFO Generated: fancybox/helpers/jquery.fancybox-media.jsINFO Generated: css/fonts/fontawesome-webfont.woffINFO Generated: fancybox/helpers/jquery.fancybox-thumbs.jsINFO Generated: fancybox/helpers/fancybox_buttons.pngINFO Generated: css/fonts/fontawesome-webfont.svgINFO Generated: css/fonts/fontawesome-webfont.ttfINFO Generated: css/fonts/FontAwesome.otfINFO Generated: css/images/banner.jpgINFO Generated: 2019/05/23/hello-world/index.htmlINFO Generated: fancybox/jquery.fancybox.jsINFO 28 files generated in 930 ms 继续执行$ hexo deploy发布，报错继续往下，不报错就忽略对报错的处理 1234567891011121314151617181920212223242526272829$ hexo deployFATAL bad indentation of a mapping entry at line 83, column 9: branch: master ^YAMLException: bad indentation of a mapping entry at line 83, column 9: branch: master ^ at generateError (D:\blog\myblg\node_modules\js-yaml\lib\js-yaml\loader.js:167:10) at throwError (D:\blog\myblg\node_modules\js-yaml\lib\js-yaml\loader.js:173:9) at readBlockMapping (D:\blog\myblg\node_modules\js-yaml\lib\js-yaml\loader.js:1107:7) at composeNode (D:\blog\myblg\node_modules\js-yaml\lib\js-yaml\loader.js:1359:12) at readDocument (D:\blog\myblg\node_modules\js-yaml\lib\js-yaml\loader.js:1519:3) at loadDocuments (D:\blog\myblg\node_modules\js-yaml\lib\js-yaml\loader.js:1575:5) at Object.load (D:\blog\myblg\node_modules\js-yaml\lib\js-yaml\loader.js:1596:19) at Hexo.yamlHelper (D:\blog\myblg\node_modules\hexo\lib\plugins\renderer\yaml.js:7:15) at Hexo.tryCatcher (D:\blog\myblg\node_modules\bluebird\js\release\util.js:16:23) at Hexo.&lt;anonymous&gt; (D:\blog\myblg\node_modules\bluebird\js\release\method.js:15:34) at Promise.then.text (D:\blog\myblg\node_modules\hexo\lib\hexo\render.js:61:21) at tryCatcher (D:\blog\myblg\node_modules\bluebird\js\release\util.js:16:23) at Promise._settlePromiseFromHandler (D:\blog\myblg\node_modules\bluebird\js\release\promise.js:512:31) at Promise._settlePromise (D:\blog\myblg\node_modules\bluebird\js\release\promise.js:569:18) at Promise._settlePromise0 (D:\blog\myblg\node_modules\bluebird\js\release\promise.js:614:10) at Promise._settlePromises (D:\blog\myblg\node_modules\bluebird\js\release\promise.js:694:18) at _drainQueueStep (D:\blog\myblg\node_modules\bluebird\js\release\async.js:138:12) at _drainQueue (D:\blog\myblg\node_modules\bluebird\js\release\async.js:131:9) at Async._drainQueues (D:\blog\myblg\node_modules\bluebird\js\release\async.js:147:5) at Immediate.Async.drainQueues [as _onImmediate] (D:\blog\myblg\node_modules\bluebird\js\release\async.js:17:14) at runCallback (timers.js:705:18) at tryOnImmediate (timers.js:676:5) 检查配置文件，改成如下repo改成repository，冒号后面一定要有空格！！！ 1234deploy: type: git repository: https://github.com/biggerBoy/biggerBoy.github.io.git branch: master 再执行$ hexo deploy什么都不输出，或报错都是不成功，若输出如下，就是成功 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879808182$ hexo deployINFO Deploying: gitINFO Setting up Git deployment...Initialized empty Git repository in D:/blog/myblg/.deploy_git/.git/[master (root-commit) de8dd58] First commit 1 file changed, 0 insertions(+), 0 deletions(-) create mode 100644 placeholderINFO Clearing .deploy_git folder...INFO Copying files from public folder...INFO Copying files from extend dirs...warning: LF will be replaced by CRLF in 2019/05/23/hello-world/index.html.The file will have its original line endings in your working directory.warning: LF will be replaced by CRLF in archives/2019/05/index.html.The file will have its original line endings in your working directory.warning: LF will be replaced by CRLF in archives/2019/index.html.The file will have its original line endings in your working directory.warning: LF will be replaced by CRLF in archives/index.html.The file will have its original line endings in your working directory.warning: LF will be replaced by CRLF in css/style.css.The file will have its original line endings in your working directory.warning: LF will be replaced by CRLF in fancybox/helpers/jquery.fancybox-buttons.css.The file will have its original line endings in your working directory.warning: LF will be replaced by CRLF in fancybox/helpers/jquery.fancybox-buttons.js.The file will have its original line endings in your working directory.warning: LF will be replaced by CRLF in fancybox/helpers/jquery.fancybox-media.js.The file will have its original line endings in your working directory.warning: LF will be replaced by CRLF in fancybox/helpers/jquery.fancybox-thumbs.css.The file will have its original line endings in your working directory.warning: LF will be replaced by CRLF in fancybox/helpers/jquery.fancybox-thumbs.js.The file will have its original line endings in your working directory.warning: LF will be replaced by CRLF in fancybox/jquery.fancybox.css.The file will have its original line endings in your working directory.warning: LF will be replaced by CRLF in fancybox/jquery.fancybox.js.The file will have its original line endings in your working directory.warning: LF will be replaced by CRLF in fancybox/jquery.fancybox.pack.js.The file will have its original line endings in your working directory.warning: LF will be replaced by CRLF in index.html.The file will have its original line endings in your working directory.warning: LF will be replaced by CRLF in js/script.js.The file will have its original line endings in your working directory.[master 0c627f1] Site updated: 2019-05-23 14:07:10 29 files changed, 5785 insertions(+) create mode 100644 2019/05/23/hello-world/index.html create mode 100644 archives/2019/05/index.html create mode 100644 archives/2019/index.html create mode 100644 archives/index.html create mode 100644 css/fonts/FontAwesome.otf create mode 100644 css/fonts/fontawesome-webfont.eot create mode 100644 css/fonts/fontawesome-webfont.svg create mode 100644 css/fonts/fontawesome-webfont.ttf create mode 100644 css/fonts/fontawesome-webfont.woff create mode 100644 css/images/banner.jpg create mode 100644 css/style.css create mode 100644 fancybox/blank.gif create mode 100644 fancybox/fancybox_loading.gif create mode 100644 fancybox/fancybox_loading@2x.gif create mode 100644 fancybox/fancybox_overlay.png create mode 100644 fancybox/fancybox_sprite.png create mode 100644 fancybox/fancybox_sprite@2x.png create mode 100644 fancybox/helpers/fancybox_buttons.png create mode 100644 fancybox/helpers/jquery.fancybox-buttons.css create mode 100644 fancybox/helpers/jquery.fancybox-buttons.js create mode 100644 fancybox/helpers/jquery.fancybox-media.js create mode 100644 fancybox/helpers/jquery.fancybox-thumbs.css create mode 100644 fancybox/helpers/jquery.fancybox-thumbs.js create mode 100644 fancybox/jquery.fancybox.css create mode 100644 fancybox/jquery.fancybox.js create mode 100644 fancybox/jquery.fancybox.pack.js create mode 100644 index.html create mode 100644 js/script.js delete mode 100644 placeholderEnumerating objects: 46, done.Counting objects: 100% (46/46), done.Delta compression using up to 4 threads.Compressing objects: 100% (36/36), done.Writing objects: 100% (46/46), 507.67 KiB | 5.46 MiB/s, done.Total 46 (delta 3), reused 0 (delta 0)remote: Resolving deltas: 100% (3/3), done.To https://github.com/biggerboy/biggerboy.github.io.git + 07ed017...0c627f1 HEAD -&gt; master (forced update)Branch &apos;master&apos; set up to track remote branch &apos;master&apos; from &apos;https://github.com/biggerboy/biggerboy.github.io.git&apos;.INFO Deploy done: git 说明成功！！！！ 访问http://biggerboy.github.io后如下，成功了。这是默认的主题，默认页面 到此，搭建完成，可以自己任意玩了。 一些命令，都是在git bash下执行， 创建文章：hexo new “文章名”， 会在\source_posts下生成一个.md文件，打开它编辑你的文章就行了，这个文件是用Markdown编辑器编辑的。 写完文章后，git bash分别执行三个命令hexo claen，hexo g， hexo d hexo claen可以不执行 这时候在访问你的网站就有你新写的文章了。 还可以增加搜索功能，评论功能，订阅功能，访客量统计，个性化导航栏，更换主题]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>hexo，博客</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[如何向女朋友解释int==Integer为true]]></title>
    <url>%2F2019%2F05%2F23%2F%E5%A6%82%E4%BD%95%E5%90%91%E5%A5%B3%E6%9C%8B%E5%8F%8B%E8%A7%A3%E9%87%8Aint-Integer%E4%B8%BAtrue%2F</url>
    <content type="text"><![CDATA[int==Integer为什么返回true先看现象吧 执行下面的代码及输出结果： 123456int a = 1;Integer b = 1;Integer c = new Integer(1);System.out.println(a==b);//trueSystem.out.println(a==c);//trueSystem.out.println(b==c);//false 通常大家对此的解释是，==对于基本类型来说比较的是值，对于引用类型来说比较的是引用，即指向的对象的内存地址。这样解释没错，b==c结果为false毋庸置疑，因为两个都是引用类型。但是为什么a==b（a==c）一个是基本类型一个是引用类型，比较的时候还是值比较呢？ 这个时候我们不妨把.java源文件编译后的.class文件使用反编译工具反编译成源码，看看虚拟机内部是如何处理a==b的。 .class文件使用jd-gui反编译后的： 123456int a = 1;Integer b = Integer.valueOf(1);Integer c = new Integer(1);System.out.println(a == b.intValue());System.out.println(a == c.intValue());System.out.println(b == c); 看到这想必大家都明白了吧，其实基本类型a和引用类型b比较时，引用类型b调用自身的intValue()方法获取Integer实际表示的int类型的值，即a == b.intValue()还是两个int类型的变量进行值比较。符合上述：==对于基本类型来说比较的是值，对于引用类型来说比较的是引用，即指向的对象的内存地址。 基本类型及引用类型在内存中的存储方式说到这，还要解释下为什么两个引用类型的值一样而引用不一样以及基本变量为什么是值比较。 其实基本变量int a在内存里只有一份，保存在栈（保存基本类型的变量数据及引用类型的引用）中，Integer b和Integer c中的int值都指向栈中同一个int，不会重新在栈中创建相同的int值。 而对于Integer b和Integer c，其实例是保存在堆（保存所有new出来的对象）中，虽然表示的int值相同，但是在堆中有两份，每次new都会在堆中开辟一片空间保存new的内容，故Integer b和Integer c分别在两片不同的内存空间存储，所以指向的内存地址不同。 而对于Integer b = 1;其反编译后为Integer b = Integer.valueOf(1);而valueOf()方法内部是调用了new。 JDK中Integer.valueOf()源码： 12345public static Integer valueOf(int i) &#123; if (i &gt;= IntegerCache.low &amp;&amp; i &lt;= IntegerCache.high) return IntegerCache.cache[i + (-IntegerCache.low)]; return new Integer(i);&#125; 总结了解原理是弄清问题的关键，像这样的问题以后还多着呢。不懂的时候可以敲敲代码，然后反编译，看看虚拟机是怎么处理的，看看原理翻翻源码，问题也就迎刃而解了。]]></content>
      <categories>
        <category>java基础</category>
      </categories>
      <tags>
        <tag>包装类</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Java类是如何默认继承Object的？]]></title>
    <url>%2F2019%2F05%2F23%2FJava%E7%B1%BB%E6%98%AF%E5%A6%82%E4%BD%95%E9%BB%98%E8%AE%A4%E7%BB%A7%E6%89%BFObject%E7%9A%84%EF%BC%9F%2F</url>
    <content type="text"><![CDATA[前言学过Java的同学都知道，Object是所有类的父类。但是你有没有这样的疑问，我并没有写extends Object，它是怎么默认继承Object的呢？ 那么今天我们就来看看像Java这种依赖于虚拟机的编程语言是怎样实现默认继承Object的，以及Java编译器和JVM到底是如何做的？ 继承自Object验证首先我们来验证一下Object是不是所有类的父类，随便新建一个Java类，如下图： 从上面的代码可以看出，new MyClass()打点之后可以选择调用的方法有很多，我们定义的MyClass类里面只有一个main方法，那这些方法哪来的，显然是Object里声明的，故MyClass类的父类就是Object，因此，在MyClass中可以使用Object类的public或protected资源。 另外，当A类继承MyClass类时，通过打点也可以调到Object内的方法，这是继承的传递，好比Object是MyClass的“父亲”，MyClass是A类的“父亲”，Object是A类的“爷爷”，间接的继承了Object。 因此，Object是超类，是所有类的父类。 推测可能的原因要了解Java类是如何默认继承Object的？的原因其实并不需要知道JVM的实现细节。只需了解一下对于这种虚拟机程序的基本原理即可。一般对于这种靠虚拟机运行的语言（如Java、C#等）会有两种方法处理默认继承问题。 编译器处理在编译源代码时，当一个类没有显式标明继承的父类时，编译器会为其指定一个默认的父类（一般为Object），而交给虚拟机处理这个类时，由于这个类已经有一个默认的父类了，因此，VM仍然会按照常规的方法像处理其他类一样来处理这个类。对于这种情况，从编译后的二进制角度来看，所有的类都会有一个父类（后面可以以此依据来验证）。 JVM处理编译器仍然按照实际代码进行编译，并不会做额外的处理，即如果一个类没有显式地继承于其他类时，编译后的代码仍然没有父类。然后由虚拟机运行二进制代码时，当遇到没有父类的类时，就会自动将这个类看成是Object类的子类（一般这类语言的默认父类都是Object）。 验证结论从上面两种情况可以看出，第1种情况是在编译器上做的文章，也就是说，当没有父类时，由编译器在编译时自动为其指定一个父类。第2种情况是在虚拟机上做文章，也就是这个默认的父类是由虚拟机来添加的。 那么Java是属于哪一种情况呢？其实这个答案很好得出。只需要随便找一个反编译工具，将.class文件进行反编译即可得知编译器是如何编译的。 就以上面代码为例，如果是第1种情况，就算MyClass没有父类，但由于编译器已经为MyClass自动添加了一个Object父类，所以，在反编译后得到的源代码中的MyClass类将会继承Object类的。如果不是这种情况，那么就是第2种情况。 那么实际情况是什么样的呢？现在我们就将MyClass.class反编译看看到底如何。 jd-gui反编： 使用JDK自带的工具（javap）反编译 CMD命令行下执行：javap MyClass&gt;MyClass.txt 可以看出实际的反编译后的文件中并没有extends Object，使用排除法，因此是第2情况。 这样来推导出的结论是第2种情况，但事实真的如此吗？为什么网上还有说反编译后的是有extends Object字样？ JDK版本问题？ 猜想是JDK版本的问题，于是把JDK版本切换到7，使用jd-gui和javap反编译，接果和使用JDK8反编译后的结果一样，也都没有extends Object。 继续换版本，昨晚在宿舍准备到Oracle官网下载JDK 6，但是死活下不来，今早到公司后第一件事就是下载，很顺利，安装后把JDK版本切换到JDK 6。 仍然在CMD窗口执行javap MyClass&gt;MyClass.txt，得到的TXT文件内容如下： what？竟然有extends Object，jd-gui反编译后的依然没有。即，JDK 6之前使用javap反编译后的MyClass类显式的继承Object，JDK 7以后没有；jd-gui反编译后的不管JDK版本如何始终没有。我们以java自带的工具为准。 总结那么就是说JDK 6之前是编译器处理，JDK 7之后是虚拟机处理。 但是仔细想想我们在编辑器里（IDE）打点时就能列出Object类下的方法，此时还没轮到编译器和jvm，编辑器就已经知道MyClass类的父类是Object类了，这是因为编辑器为我们做了一些智能处理。 【end】]]></content>
      <categories>
        <category>java基础</category>
      </categories>
      <tags>
        <tag>继承</tag>
      </tags>
  </entry>
</search>
